<?php

/**
 * @file
 * Install, update and uninstall functions for the comune installation profile.
 */

use Drupal\user\Entity\User;
use Drupal\shortcut\Entity\Shortcut;

/**
 * Implements hook_requirements().
 */
// function comune_requirements($phase) {
//   $requirements = [];

//   switch ($phase) {
//     case 'install':
//       // We don't care how Drupal configures the private file system (e.g.
//       // through a setting or otherwise), we just care that our `private` uri
//       // scheme for our file field storages works.
//       // if (!in_array('private', stream_get_wrappers(), TRUE)) {
//       //   $requirements['private_file_system'] = [
//       //     'title' => t('Private File System'),
//       //     'value' => t('Not configured'),
//       //     'description' => t('The private file system must be configured for Comune to install. You may opt-out of the private file system for individual fields after installation. See https://www.drupal.org/documentation/modules/file for how to set the file_private_path in your settings.php.'),
//       //     'severity' => REQUIREMENT_ERROR,
//       //   ];
//       // }
//       break;
//     case 'runtime'
//       $profile = \Drupal::installProfile();
//       $info = \Drupal::service('extension.list.profile')->getExtensionInfo($profile);
//       $requirements['experimental_profile_used'] = [
//         'title' => t('Experimental installation profile used'),
//         'value' => $info['name'],
//         'description' => t('Experimental profiles are provided for testing purposes only. Use at your own risk. To start building a new site, reinstall Drupal and choose a non-experimental profile.'),
//         'severity' => REQUIREMENT_WARNING,
//       ];
//       break;
//   }

//   return $requirements;
// }

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function comune_install() {
  // Assign user 1 the "administrator" role.
  /** @var \Drupal\user\Entity\User $user */
  $user = User::load(1);
  $user->addRole('administrator');
  $user->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('All content'),
    'weight' => -19,
    'link' => ['uri' => 'internal:/admin/content'],
  ]);
  $shortcut->save();

  // Enable empty front page module
  \Drupal::service('module_installer')->install(['bootstrap_italia_empty_front_page'], TRUE);
  // Enable the demo content module. This can't be specified as a dependency
  // in the comune.info.yml file, as it requires configuration provided by
  // the profile (fields etc.).
  // \Drupal::service('module_installer')->install(['comune_content'], TRUE);
}
